package com.optimizer.analyzer_service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

@Service
public class EmailService {

    private static final Logger log = LoggerFactory.getLogger(EmailService.class);

    private final JavaMailSender mailSender; // Injected by Spring Boot Mail starter

    // Read properties from application.properties
    @Value("${performance.report.recipient}")
    private String recipient;

    @Value("${spring.mail.username}")
    private String sender; // Should match the configured username

    @Value("${performance.report.subject}")
    private String subject;

    // Constructor for dependency injection
    public EmailService(JavaMailSender mailSender) {
        this.mailSender = mailSender;
    }

    /**
     * Sends the performance report via email.
     * Skips sending if the report content indicates no issues.
     */
    public void sendPerformanceReport(String reportContent) {
        // Don't send email if there's nothing significant to report
        if (reportContent == null || reportContent.isBlank() || reportContent.contains("No significant performance issues")) {
             log.info("No significant performance insights to report this period. Skipping email.");
            return;
        }

        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(sender);
            message.setTo(recipient);
            message.setSubject(subject);
            message.setText(reportContent); // The body generated by WeeklyReportTask

            mailSender.send(message); // Send the email

            log.info("Performance report email sent successfully to {}", recipient);
        } catch (Exception e) {
            // Log errors if email sending fails (e.g., bad credentials, network issue)
            log.error("Failed to send performance report email to {}: {}", recipient, e.getMessage(), e);
        }
    }
}